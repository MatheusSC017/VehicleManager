version: "3.3"

services:
  postgres:
    image: postgres:15-alpine
    container_name: vehicle-manager-postgres
    env_file:
      - .env
    environment:
      POSTGRES_DB: vehicle-manager
      POSTGRES_USER: vehicle-manager-user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M

  backend-instance-1:
    build: .
    container_name: vehicle-manager-backend-instance-1
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DB_URL: jdbc:postgresql://postgres:5432/vehicle-manager
      DB_USERNAME: vehicle-manager-user
      DB_PASSWORD: ${DB_PASSWORD}
      SECRET_KEY: ${SECRET_KEY}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
      AWS_SECRET_KEY: ${AWS_SECRET_KEY}
      AWS_REGION: ${AWS_REGION}
      ASW_S3_BUCKET_NAME: ${ASW_S3_BUCKET_NAME}
    deploy:
      resources:
        limits:
          cpus: "0.7"
          memory: 1g
        reservations:
          cpus: "0.25"
          memory: 512m
    restart: unless-stopped
    command: [ "sh", "-c", "sleep 15 && java -jar app.jar" ]

  backend-instance-2:
    build: .
    container_name: vehicle-manager-backend-instance-2
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DB_URL: jdbc:postgresql://postgres:5432/vehicle-manager
      DB_USERNAME: vehicle-manager-user
      DB_PASSWORD: ${DB_PASSWORD}
      SECRET_KEY: ${SECRET_KEY}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
      AWS_SECRET_KEY: ${AWS_SECRET_KEY}
      AWS_REGION: ${AWS_REGION}
      ASW_S3_BUCKET_NAME: ${ASW_S3_BUCKET_NAME}
    deploy:
      resources:
        limits:
          cpus: "0.7"
          memory: 1g
        reservations:
          cpus: "0.25"
          memory: 512m
    restart: unless-stopped
    command: [ "sh", "-c", "sleep 15 && java -jar app.jar" ]

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend-instance-1
      - backend-instance-2

volumes:
  postgres_data:
    driver: local
